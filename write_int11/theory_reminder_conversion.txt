279
-41

i numeri devono poter andare da -1000 a +1000

17 01 00 00  D7 FF FF FF

001.0001.0111 111.1101.0111

0010.0010 1111.1111 0101.1100

22 FF 5C

assumiamo di lavorare con 8bit numbers

        abcd.efgh                   ogni lettera può essere 0 o 1

f  -->  0000.000f

voglio ottenere f: faccio

        abcd.efgh &
        0000.0100 =
        -----------
        0000.0f00 >> (shift)
        0000.000f

oppure (meglio fare prima lo shift così la mask non cambia)

        abcd.efgh >>
        00ab.cdef &
        0000.0001 =
        -----------
        0000.000f

MI RACCOMANDO LAVORA CON UNSIGNED ALTRIMENTI "a" VA NEI CASINI.

        7654.3210
  <---  ????.????  <---
        abcd.efgh  <---

        bcde.fgh1  <<

n: 11 bits
number: 0000.0000.0000.0000.0000.0001.0001.0111
buffer: ???

we push 10 bit to the right, and we have the eleventh
lo metto in and con una maschera, e mi rimane solo quello. Poi lo pusho sul buffer (dalla destra).

0
00
001
0010
00100
001000
0010001
00100010
001000101
0010001011
00100010111

e questo deve essere il risultato.

Notiamo che il file di partenza pesa 7 bytes mentre il file di output ne pesa 3. 
Riduce significativamente le dimensioni.
